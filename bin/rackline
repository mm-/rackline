#!/usr/bin/env ruby

require 'optparse'
require 'methadone'
require 'rackline'
require 'cloudservers'
require 'parseconfig'

class App
  include Methadone::Main
  include Methadone::CLILogging
  include Rackline


  # Main authentication block
  # 
  main do |server_name|
    rackline_config = ENV['HOME']+"/.rackline"
    if !options[:username].nil? && !options[:api_key].nil?
      un = options[:username]
      ak = options[:api_key]
    elsif File.exists?(rackline_config)
      config_file = ParseConfig.new(rackline_config)
      un = config_file.get_value('username')
      ak = config_file.get_value('api_key')
      if ak.empty? && un.empty?
      help_now!("Config file ~/.rackline read but either username or api_key
                  was empty. Please fix config or use --username
                  and --api_key to specify them on the command line")
      end
    end

    # Connect to rackspace cloud
    $cs = CloudServers::Connection.new(:username => "#{un}" , :api_key => "#{ak}")

    # Find our server!
    server = ServerFind.new(server_name)
    
    if options[:id_only]
      server.byname_idonly
    elsif options[:full_info]
      server.byname_fullinfo
    else
      server.byname 
    end

  end

  version Rackline::VERSION

  description 'Finds cloudserver by server name'

  arg :server_name, "Server name to search for"

  on("--username un", "Connect with specified username")
  on("--api_key ak", "Connect with specified api_key")
  on("--id_only", "Return only the ID associated with server_name")
  on("--full_info", "Return full info about each sever found")
  

  use_log_level_option

  go!
end
