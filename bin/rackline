#!/usr/bin/env ruby

require 'optparse'
require 'methadone'
require 'rackline'
require 'cloudservers'
require 'parseconfig'

class App
  include Methadone::Main
  include Methadone::CLILogging
  include Rackline

  main do |server_name|

    # Main authentication block

    rackline_config = ENV['HOME']+"/.rackline"
    if !options[:username].nil? && !options[:api_key].nil?
      un = options[:username]
      ak = options[:api_key]
    elsif File.exists?(rackline_config)
      config_file = ParseConfig.new(rackline_config)
      un = config_file.get_value('username')
      ak = config_file.get_value('api_key')
      if ak.empty? && un.empty?
      help_now!("Config file ~/.rackline read but either username or api_key
                  was empty. Please fix config or use --username
                  and --api_key to specify them on the command line")
      end
    end

    #### Connect
    $cs = CloudServers::Connection.new(:username => "#{un}" , :api_key => "#{ak}")
    #### Connect


    # Search block
    server = ServerFind.new(server_name)


    if options[:namesearch] == "id" 
      server.byname_idonly
    elsif options[:namesearch] == "full" 
      server.byname_fullinfo
    elsif options[:namesearch] == "base"
      server.byname 
    end

  end


  version Rackline::VERSION

  description 'CLI control of Rackspace Cloud servers'
  arg :server_name, "Server name or ID"
  on("--username un", "Connect with specified username")
  on("--api_key ak", "Connect with specified api_key")
  on("--namesearch level", "-s level", "Search cloudservers by name. Output Levels: base, id_only, or full_info") 


  use_log_level_option

  go!
end
